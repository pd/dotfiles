[user]
	name = Kyle Hargraves
	email = pd@krh.me
	signingkey = DD38F92A6ADBE121
[color]
	ui = auto
[color "branch"]
	current = green
	local = yellow
	remote = yellow reverse
[color "diff"]
	meta = white bold
	frag = cyan bold
	old = red bold
	new = green bold
[color "status"]
	added = yellow
	changed = green
	untracked = cyan
[core]
	excludesfile = ~/.gitignore
[status]
	submodulesummary = true
	relativePaths = false
[github]
	user = pd
[push]
	default = upstream
[merge]
	conflictstyle = diff3
[diff]
	algorithm = patience
[alias]
	append = commit --amend -C HEAD
	b   = branch
	br  = branch
	ba  = branch -a
	bv  = branch -v
	ci  = commit
	co  = checkout
	cot = checkout -t
	cp  = cherry-pick
	d   = diff --patience
	ds  = diff --cached --patience
	dhd = diff HEAD
	dmb = delete-merged-branches
	f   = fetch
	krh = remote rename khargraves krh
	l   = log --date=short --pretty=format:'%C(bold magenta)%h %Creset%C(green)%cd%Creset %C(white)%aN%Creset %s %C(yellow)%d'
	lg  = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --
	m   = merge
	pp  = pull --prune
	pr  = "!f() { remote=${2:-$(git remote|head -1)}; git fetch -fu $remote refs/pull/$1/head:pr/$1 && git checkout pr/$1; }; f"
	pr-clean = "!git for-each-ref refs/heads/pr/* --format='%(refname)' | while read ref ; do branch=${ref#refs/heads/} ; git branch -D $branch ; done"
	r   = remote
	rb  = rebase
	re  = reset
	reh = reset --hard
	rstg = restore --staged
	ru  = remote update
	rup = remote update --prune
	s   = status
	st  = status
	sh  = show
	sm  = submodule
	stash-unstaged = stash --keep-index
[rerere]
	enabled = true
[credential]
	helper = osxkeychain
[diff "sopsdiffer"]
	textconv = sops -d
[pull]
	ff = only
[include]
	path = ~/dotfiles/private/gitconfig
[url "git@github.com:"]
	insteadOf = https://github.com/
