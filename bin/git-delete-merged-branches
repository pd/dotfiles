#!/usr/bin/env bash

set -eu
set -o pipefail

MASTER_BRANCH_NAME="${MASTER_BRANCH_NAME:-master}"
REMOTE_NAME="${REMOTE_NAME:-origin}"

DELETE_LOCAL=false
DELETE_REMOTE=false
DRY_RUN=true

current_git_branch() {
  git symbolic-ref --short HEAD
}

merged_local_branches() {
  local target="$1"
  git branch --merged "$target" | grep -v '^* '
}

merged_remote_branches() {
  local remote="$1"
  local branch="$2"

  git branch --remote --merged "${remote}/${branch}" --list "${remote}/*" | \
    grep -v "${remote}/${branch}" | \
    cut -d'/' -f2-
}

delete_local_branch() {
  local branch="$1"

  if [[ "$DRY_RUN" != "false" ]]; then
    echo git branch -d \"$branch\"
  else
    git branch -d "$branch"
  fi

  true
}

delete_remote_branch() {
  local remote="$1"
  local branch="$2"

  if [[ "$DRY_RUN" != "false" ]]; then
    echo git push --force \"$remote\" :\"$branch\"
  else
    git push --force "$remote" :"$branch"
  fi

  true
}

usage () {
  cat <<EOF
Usage: $(basename $0) [-a | -r | -l] [-f]
   -r: Delete remote branches, from origin \$REMOTE_NAME (default: 'origin').
   -l: Delete local branches.
   -a: Delete both local and remote branches.
   -f: "Force", as in actually do it, instead of just printing what would be done.
EOF
}

if [[ "$(current_git_branch)" != "$MASTER_BRANCH_NAME" ]]; then
  cat <<EOF >&2
Because I'm lazy, you must run this from your master-branch
equivalent, currently considered to be '${MASTER_BRANCH_NAME}'.

Set the \$MASTER_BRANCH_NAME variable to override it.
EOF
  exit 1
fi

while getopts arlf opt; do
  case "$opt" in
    a) DELETE_REMOTE=true; DELETE_LOCAL=true;;
    r) DELETE_REMOTE=true;;
    l) DELETE_LOCAL=true;;
    f) DRY_RUN=false;;
    *) usage; exit 1;;
  esac
done

if [[ "$DELETE_LOCAL" == "false" && "$DELETE_REMOTE" == "false" ]]; then
  usage
  exit 0
fi

if [[ "$DELETE_LOCAL" == "true" ]]; then
  for branch in $(merged_local_branches "$MASTER_BRANCH_NAME"); do
    delete_local_branch "$branch"
  done
fi

if [[ "$DELETE_REMOTE" == "true" ]]; then
  for branch in $(merged_remote_branches "$REMOTE_NAME" "$MASTER_BRANCH_NAME"); do
    delete_remote_branch "$REMOTE_NAME" "$branch"
  done
fi

exit 0
