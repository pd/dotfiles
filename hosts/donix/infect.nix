{ modulesPath, lib, ... }:
{
  # mix of things generated by nixos-infect

  # configuration.nix
  boot.tmp.cleanOnBoot = true;
  zramSwap.enable = false;

  # hardware-configuration.nix
  imports = [ (modulesPath + "/profiles/qemu-guest.nix") ];
  boot.loader.grub.device = "/dev/vda";
  boot.initrd.availableKernelModules = [
    "ata_piix"
    "uhci_hcd"
    "xen_blkfront"
    "vmw_pvscsi"
  ];
  boot.initrd.kernelModules = [ "nvme" ];
  fileSystems."/" = {
    device = "/dev/vda1";
    fsType = "ext4";
  };

  # networking.nix
  services.udev.extraRules = ''
    ATTR{address}=="e6:65:f6:3b:e4:4b", NAME="eth0"
    ATTR{address}=="de:e4:1b:44:b1:da", NAME="eth1"
  '';

  networking = {
    defaultGateway = {
      address = "159.203.128.1";
      interface = "eth0";
    };
    defaultGateway6 = {
      address = "2604:a880:800:14::1";
      interface = "eth0";
    };
    dhcpcd.enable = false;
    usePredictableInterfaceNames = lib.mkForce false;
    interfaces = {
      eth0 = {
        ipv4.addresses = [
          {
            address = "159.203.138.115";
            prefixLength = 20;
          }
          {
            address = "10.17.0.6";
            prefixLength = 16;
          }
        ];
        ipv6.addresses = [
          {
            address = "2604:a880:800:14::4798:6000";
            prefixLength = 64;
          }
          {
            address = "fe80::e465:f6ff:fe3b:e44b";
            prefixLength = 64;
          }
        ];
        ipv4.routes = [
          {
            address = "159.203.128.1";
            prefixLength = 32;
          }
        ];
        ipv6.routes = [
          {
            address = "2604:a880:800:14::1";
            prefixLength = 128;
          }
        ];
      };
      eth1 = {
        ipv4.addresses = [
          {
            address = "10.132.0.2";
            prefixLength = 16;
          }
        ];
        ipv6.addresses = [
          {
            address = "fe80::dce4:1bff:fe44:b1da";
            prefixLength = 64;
          }
        ];
      };
    };
  };
}
